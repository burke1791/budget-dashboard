[{"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/index.js":"1","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/App.js":"2","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/reportWebVitals.js":"3","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/components/overviewCards.js":"4","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/components/budgetCard.js":"5","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/overview.js":"6","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/accounts.js":"7","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/utilities/constants.js":"8","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/hooks/useData.js":"9","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/categories.js":"10","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/utilities/apiHelper.js":"11"},{"size":500,"mtime":1610908734156,"results":"12","hashOfConfig":"13"},{"size":1310,"mtime":1616361490177,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610908734158,"results":"15","hashOfConfig":"13"},{"size":583,"mtime":1614638151465,"results":"16","hashOfConfig":"13"},{"size":578,"mtime":1614638159432,"results":"17","hashOfConfig":"13"},{"size":1257,"mtime":1614638175477,"results":"18","hashOfConfig":"13"},{"size":1203,"mtime":1614772377744,"results":"19","hashOfConfig":"13"},{"size":97,"mtime":1614771938546,"results":"20","hashOfConfig":"13"},{"size":1884,"mtime":1614730548768,"results":"21","hashOfConfig":"13"},{"size":1778,"mtime":1616360672904,"results":"22","hashOfConfig":"13"},{"size":908,"mtime":1615063721201,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hjexi1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"26"},"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/index.js",[],["52","53"],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/App.js",["54"],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/reportWebVitals.js",[],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/components/overviewCards.js",["55"],"import React from 'react';\nimport { Card, Col, Row } from 'antd';\nimport BudgetCard from './budgetCard';\n\nfunction OverviewCards() {\n\n  return (\n    <Row type='flex' justify='center' gutter={[16, 24]} style={{ width: '100%', overflowX: 'hidden', marginTop: 12 }}>\n      <Col xs={0} md={5} xxl={3}>\n        <BudgetCard title='Total Income' />\n      </Col>\n      <Col xs={0} md={5} xxl={3}>\n        <BudgetCard title='Total Spent' />\n      </Col>\n      <Col xs={0} md={5} xxl={3}>\n        <BudgetCard title='Total Saved' />\n      </Col>\n    </Row>\n  );\n}\n\nexport default OverviewCards;","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/components/budgetCard.js",["56","57"],"import React, { useEffect, useState } from 'react';\nimport { Card, Statistic } from 'antd';\nimport 'antd/dist/antd.css';\n\nfunction BudgetCard(props) {\n\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState(null);\n\n  useEffect(() => {\n    fetchData();\n  }, [props.dataPoint]);\n\n  const fetchData = () => {\n    \n  }\n\n  return (\n    <Card\n      loading={loading}\n      style={{ textAlign: 'center' }}\n      bodyStyle={{ padding: '24px 12px' }}\n    >\n      <Statistic title={props.title} value={value} />\n    </Card>\n  );\n}\n\nexport default BudgetCard;","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/overview.js",["58","59","60","61"],"import { DatePicker, Layout, Row, Select, Typography } from 'antd';\nimport 'antd/dist/antd.css';\nimport React, { Fragment, useState } from 'react';\nimport moment from 'moment';\nimport OverviewCards from '../components/overviewCards';\n\nconst { Content, Header } = Layout;\nconst { Title } = Typography;\nconst { Option } = Select;\n\nfunction Overview() {\n\n  const [month, setMonth] = useState('');\n\n  const monthSelected = (event, option) => {\n    if (event != null) {\n      console.log(event.format('DD MMM YYYY'));\n      console.log(option);\n    }\n    \n    // setMonth(event.value);\n  }\n\n  return (\n    <Fragment>\n      <Row justify='center'>\n        <Header style={{ background: 'none', textAlign: 'center', height: 48 }}>\n          <Title\n            level={1}\n            ellipsis={{ rows: 1 }}\n            style={{ margin: 0, fontSize: '32px', fontWeight: 500 }}\n          >\n            Overview\n          </Title>\n        </Header>\n      </Row>\n      <Row justify='center'>\n        <DatePicker\n          defaultValue={moment('2021-02')}\n          format='MMMM YYYY'\n          onChange={monthSelected}\n          picker='month'\n          style={{ width: 200 }}\n        />\n      </Row>\n      <OverviewCards />\n    </Fragment>\n  )\n}\n\nexport default Overview;","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/accounts.js",[],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/utilities/constants.js",[],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/hooks/useData.js",["62","63","64"],"import axios from 'axios';\nimport { useState, useEffect, useCallback } from 'react';\n\n/**\n * @function useData - custom hook for hitting an API endpoint\n * @param {Object} options\n * @param {String} options.endpoint - API endpoint\n * @param {String} options.method - HTTP method\n * @param {Object} options.headers - HTTP headers\n * @param {Object} options.payload - HTTP payload - used for POST requests\n * @param {Function} options.processData - function for processing data returned by the API\n */\nfunction useData({ endpoint, method, headers = {}, payload = {}, processData }) {\n\n  const [data, setData] = useState();\n\n  // used for dependency arrays\n  const [stringifiedEndpoint, stringifiedHeaders] = [endpoint, JSON.stringify(headers)];\n\n  // If no processing function is passed just return the data\n  // The callback hook ensures that the function is only created once\n  // and hence the effect hook below doesn't start an infinite loop\n  const processJson = useCallback(processData || ((jsonBody) => jsonBody), []);\n\n  useEffect(() => {\n    fetchApi().then(data => {\n      setData(data);\n    });\n  }, [stringifiedEndpoint, stringifiedHeaders, processJson]);\n\n  const generateRequestOptions = ({ endpoint, method, headers = {}, payload = {} }) => {\n    let options = {\n      url: process.env.REACT_APP_BASE_URL + endpoint,\n      headers: headers,\n      method: method\n    };\n\n    if (method == 'POST') {\n      options.data = payload\n    }\n\n    return options;\n  }\n\n  const fetchApi = () => {\n    let options = generateRequestOptions({ endpoint, method, headers, payload });\n    console.log(options);\n\n    return new Promise((resolve, reject) => {\n      axios(options).then(response => {\n        resolve(processJson(response.data));\n      }).catch(error => {\n        console.log(error);\n        reject(error);\n      });\n    });\n  };\n\n  return [data];\n};\n\nexport default useData;","/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/pages/categories.js",[],"/Users/chrisburke/Documents/RaspberryPi/budget-dashboard/src/utilities/apiHelper.js",["65","66"],"\nconst processCategories = (categories) => {\n  let categoryGroups = [];\n  let processedGroups = [];\n\n  categories.forEach(category => {\n    let groupId = category.categoryGroup.categoryGroupId;\n    let groupName = category.categoryGroup.categoryGroupName;\n\n    if (processedGroups.find(groupNum => { return groupNum == groupId})) {\n      let cat = {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName\n      };\n\n      categoryGroups.find(group => group.groupId == groupId).categories.push(cat);\n    } else {\n      let cat = {\n        categoryId: category.categoryId,\n        categoryName: category.categoryName\n      };\n\n      let group = {\n        groupId: groupId,\n        groupName: groupName,\n        categories: [cat]\n      };\n\n      categoryGroups.push(group);\n      processedGroups.push(groupId);\n    }\n  });\n\n  return categoryGroups;\n}\n\nexport {\n  processCategories\n}",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":9,"column":16,"nodeType":"73","messageId":"74","endLine":9,"endColumn":22},{"ruleId":"71","severity":1,"message":"75","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":7,"column":19,"nodeType":"73","messageId":"74","endLine":7,"endColumn":29},{"ruleId":"71","severity":1,"message":"77","line":8,"column":17,"nodeType":"73","messageId":"74","endLine":8,"endColumn":25},{"ruleId":"71","severity":1,"message":"78","line":7,"column":9,"nodeType":"73","messageId":"74","endLine":7,"endColumn":16},{"ruleId":"71","severity":1,"message":"79","line":9,"column":9,"nodeType":"73","messageId":"74","endLine":9,"endColumn":15},{"ruleId":"71","severity":1,"message":"80","line":13,"column":10,"nodeType":"73","messageId":"74","endLine":13,"endColumn":15},{"ruleId":"71","severity":1,"message":"81","line":13,"column":17,"nodeType":"73","messageId":"74","endLine":13,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":23,"column":23,"nodeType":"73","endLine":23,"endColumn":34},{"ruleId":"82","severity":1,"message":"84","line":29,"column":6,"nodeType":"85","endLine":29,"endColumn":60,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":38,"column":16,"nodeType":"89","messageId":"90","endLine":38,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":10,"column":60,"nodeType":"89","messageId":"90","endLine":10,"endColumn":62},{"ruleId":"87","severity":1,"message":"88","line":16,"column":50,"nodeType":"89","messageId":"90","endLine":16,"endColumn":52},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Header' is assigned a value but never used.","Identifier","unusedVar","'Card' is defined but never used.","'setLoading' is assigned a value but never used.","'setValue' is assigned a value but never used.","'Content' is assigned a value but never used.","'Option' is assigned a value but never used.","'month' is assigned a value but never used.","'setMonth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","React Hook useEffect has a missing dependency: 'fetchApi'. Either include it or remove the dependency array.","ArrayExpression",["93"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},"Update the dependencies array to be: [stringifiedEndpoint, stringifiedHeaders, processJson, fetchApi]",{"range":"96","text":"97"},[1109,1163],"[stringifiedEndpoint, stringifiedHeaders, processJson, fetchApi]"]